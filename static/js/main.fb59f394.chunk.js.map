{"version":3,"sources":["appService.js","utils.js","stockTable.js","dialogs/stockDialog.js","dialogs/graphDialog.js","Portfolio.js","dialogs/portfolioDialog.js","App.js","serviceWorker.js","index.js"],"names":["getStockData","stockSymbol","url","axios","get","then","response","Note","data","alert","getRandomColor","o","Math","round","r","random","toFixed","StockTable","checked","stock","_this","props","onSelect","_this2","this","Header","id","accessor","d","parseFloat","shares","Cell","_ref","original","react_default","a","createElement","type","className","selected","onChange","columns","getColumns","es","showPagination","resizable","minRows","Component","StockDialog","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","stockInput","React","createRef","sharesInput","openDialog","disabled","setState","isDialogOpen","handleClose","addStocks","e","preventDefault","action","current","value","state","onClick","dist_default","title","name","modal","onClose","buttons","text","onSubmit","ref","required","min","GraphDialog","startDate","endDate","updateGraphData","alertMessage","start","end","datasets","dateLabels","promises","forEach","symbol","histData","promise","getHistoricData","element","date","Date","push","label","fill","backgroundColor","Promise","all","labels","toConsumableArray","Set","setChecked","checkedSymbols","filter","height","width","map","key","target","react_chartjs_2_es","Portfolio","stocks","currencySelector","stockExists","toUpperCase","parseInt","removeStocks","index","splice","convert","currency","from","getExchangeRate","rate","converted","onStockSelect","sum","removePortfolio","stockTable","getTotal","stockDialog","length","graphDialog","InputDialog","nameInput","createPortfolio","App","dialogIsOpen","portfolios","componentDidUpdate","localStorage","setItem","JSON","stringify","fetchData","localStoragedata","keys","portfolio","addPortfolio","objectSpread","concat","now","portfolioKey","bind","assertThisInitialized","parse","getItem","portfolioDialog","src_Portfolio","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fb59f394.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport function getExchangeRate(currency) {\n\tvar from = \"usd\";\n\tif (currency === \"usd\") {\n\t\tfrom = \"eur\";\n\t}\n\tvar apiKey = \"RPEAO2U8P0FSYJ75\";\n\tvar url =\n\t\t\"https://www.alphavantage.co/query?function=CURRENCY_EXCHANGE_RATE&from_currency=\" +\n\t\tfrom +\n\t\t\"&to_currency=\" +\n\t\tcurrency +\n\t\t\"&apikey=\" +\n\t\tapiKey;\n\treturn axios.get(url).then(response => {\n\t\treturn response.data[\"Realtime Currency Exchange Rate\"][\"5. Exchange Rate\"];\n\t});\n}\n\nexport function getStockData(stockSymbol) {\n\tvar apiKey = \"RPEAO2U8P0FSYJ75\";\n\tvar url =\n\t\t\"https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=\" +\n\t\tstockSymbol +\n\t\t\"&apikey=\" +\n\t\tapiKey;\n\treturn axios.get(url).then(response => {\n\t\tif (response.Note) {\n\t\t\talert(response.data.Note);\n\t\t} else {\n\t\t\treturn response.data[\"Global Quote\"];\n\t\t}\n\t});\n}\n\nexport function getHistoricData(stockSymbol) {\n\tvar apiKey = \"RPEAO2U8P0FSYJ75\";\n\tvar url =\n\t\t\"https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=\" +\n\t\tstockSymbol +\n\t\t\"&apikey=\" +\n\t\tapiKey;\n\treturn axios.get(url).then(response => {\n\t\treturn response;\n\t});\n}\n","export function convert(stocks, rate) {\n\tstocks.forEach(stock => {\n\t\tstock.data[\"05. price\"] =\n\t\t\tparseFloat(stock.data[\"05. price\"]) * parseFloat(rate);\n\t});\n\treturn stocks;\n}\n\nexport function getRandomColor() {\n\tvar o = Math.round, r = Math.random, s = 255;\n    var color = 'rgba(' + o(r()*s) + ',' + o(r()*s) + ',' + o(r()*s) + ',' + r().toFixed(1) + ')';\n\treturn color;\n}","import React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport \"./App.css\"\n\nclass StockTable extends Component {\n\tgetColumns() {\n\t\tvar columns = [\n\t\t\t{\n\t\t\t\tHeader: \"Name\",\n\t\t\t\tid: \"name\",\n\t\t\t\taccessor: d => d.data[\"01. symbol\"]\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: \"Unit value\",\n\t\t\t\tid: \"unitValue\",\n\t\t\t\taccessor: d => parseFloat(d.data[\"05. price\"]).toFixed(2)\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: \"Quantity\",\n\t\t\t\taccessor: \"shares\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: \"Total value\",\n\t\t\t\tid: \"totalValue\",\n\t\t\t\taccessor: d => (d.data[\"05. price\"] * d.shares).toFixed(2)\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: \"Select\",\n\t\t\t\taccessor: \"selected\",\n\t\t\t\tCell: ({ original }) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\tclassName=\"checkbox\"\n\t\t\t\t\t\t\tchecked={original.selected}\n\t\t\t\t\t\t\tonChange={() => this.checked(original)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\t\treturn columns;\n\t}\n\n\tchecked = stock => {\n\t\tthis.props.onSelect(stock);\n\t};\n\n\trender() {\n\t\tconst columns = this.getColumns();\n\t\treturn (\n\t\t\t<ReactTable\n\t\t\t\tdata={this.props.data}\n\t\t\t\tcolumns={columns}\n\t\t\t\tshowPagination={false}\n\t\t\t\tresizable={false}\n\t\t\t\tminRows={3}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nexport default StockTable;\n","import React, { Component } from \"react\";\nimport Dialog from \"react-dialog\";\nimport \"react-dialog/css/index.css\";\nimport \"../App.css\"\n\nclass StockDialog extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tisDialogOpen: false\n\t\t};\n\t}\n\tstockInput = React.createRef();\n\tsharesInput = React.createRef();\n\n\topenDialog = () => {\n\t\tif (this.props.disabled) {\n\t\t\talert(\"You have reached the maximum amount of stocks in this portfolio!\");\n\t\t} else {\n\t\t\tthis.setState({ isDialogOpen: true });\n\t\t}\n\t};\n\n\thandleClose = () => {\n\t\tthis.setState({ isDialogOpen: false });\n\t};\n\n\taddStocks = (e) => {\n\t\te.preventDefault();\n\t\tthis.props.action(\n\t\t\tthis.stockInput.current.value,\n\t\t\tthis.sharesInput.current.value\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<button type=\"button\" onClick={this.openDialog}>\n\t\t\t\t\tAdd stocks\n\t\t\t\t</button>\n\t\t\t\t{this.state.isDialogOpen && (\n\t\t\t\t\t<Dialog\n\t\t\t\t\t\ttitle={\"Add stocks to \" + this.props.name}\n\t\t\t\t\t\tmodal={true}\n\t\t\t\t\t\tonClose={this.handleClose}\n\t\t\t\t\t\tbuttons={[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttext: \"Close\",\n\t\t\t\t\t\t\t\tonClick: () => this.handleClose()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]}\n\t\t\t\t\t>\n\t\t\t\t\t<form onSubmit={this.addStocks}>\n\t\t\t\t\t\t<div className=\"stock-input\">\n\t\t\t\t\t\t\t<label>Stock symbol: </label>\n\t\t\t\t\t\t\t<input ref={this.stockInput} type=\"text\" required/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"stock-input\">\n\t\t\t\t\t\t\t<label>Amount of shares: </label>\n\t\t\t\t\t\t\t<input type=\"number\" min=\"1\" ref={this.sharesInput} required/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<button className=\"stock-input\" type=\"submit\">Add stocks</button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</Dialog>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default StockDialog;\n","import React, { Component } from \"react\";\nimport Dialog from \"react-dialog\";\nimport \"react-dialog/css/index.css\";\nimport { Line } from \"react-chartjs-2\";\nimport \"../App.css\";\nimport { getHistoricData } from \"../appService\";\nimport { getRandomColor } from \"../utils\";\n\nclass GraphDialog extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tisDialogOpen: false,\n\t\t\tdata: {},\n\t\t\tchecked: []\n\t\t};\n\t}\n\tstartDate = React.createRef();\n\tendDate = React.createRef();\n\n\topenDialog = () => {\n\t\tthis.setState({\n\t\t\tdata: {}\n\t\t});\n\t\tthis.setState({ isDialogOpen: true });\n\t};\n\n\thandleClose = () => {\n\t\tthis.setState({ isDialogOpen: false });\n\t};\n\n\tupdateGraphData = () => {\n\t\tvar start = this.startDate.current.value;\n\t\tvar end = this.endDate.current.value;\n\t\tvar data = { datasets: [] };\n\t\tvar dateLabels = [];\n\t\tvar promises = [];\n\t\tvar alertMessage;\n\n\t\tthis.state.checked.forEach(function (symbol) {\n\t\t\tvar histData = [];\n\t\t\tdateLabels = [];\n\n\t\t\tvar promise = getHistoricData(symbol).then(response => {\n\t\t\t\tif (!response.data[\"Time Series (Daily)\"]) {\n\t\t\t\t\t//If too many requests is being made the service returns a note instead of historical data\n\t\t\t\t\talertMessage = response.data.Note;\n\t\t\t\t}\n\t\t\t\tfor (var element in response.data[\"Time Series (Daily)\"]) {\n\t\t\t\t\tvar date = new Date(element);\n\t\t\t\t\tvar startDate = new Date(start);\n\t\t\t\t\tvar endDate = new Date(end);\n\t\t\t\t\tif (date > startDate && date < endDate) {\n\t\t\t\t\t\thistData.push(response.data[\"Time Series (Daily)\"][element][\"4. close\"]);\n\t\t\t\t\t\tdateLabels.push(element);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdata.datasets.push({\n\t\t\t\t\tlabel: symbol,\n\t\t\t\t\tdata: histData,\n\t\t\t\t\tfill: true,\n\t\t\t\t\tbackgroundColor: getRandomColor()\n\t\t\t\t});\n\t\t\t});\n\t\t\tpromises.push(promise);\n\t\t});\n\t\tPromise.all(promises).then(() => {\n\t\t\t//Display the alert and empty the data since there is not data for all checked symbols\n\t\t\tif (alertMessage) {\n\t\t\t\talert(alertMessage);\n\t\t\t\tdata = {}\n\t\t\t\talertMessage = null;\n\t\t\t}\n\t\t\tdata.labels = [...new Set(dateLabels)];\n\t\t\tthis.setState({\n\t\t\t\tdata: data\n\t\t\t});\n\n\t\t});\n\t}\n\n\tsetChecked = (symbol, checked) => {\n\t\tvar checkedSymbols = [...this.state.checked];\n\t\tif (checked) {\n\t\t\tcheckedSymbols.push(symbol);\n\t\t} else {\n\t\t\tcheckedSymbols = checkedSymbols.filter(function (value) {\n\t\t\t\treturn value !== symbol;\n\t\t\t});\n\t\t}\n\t\tthis.setState({\n\t\t\tchecked: checkedSymbols\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<button type=\"button\" onClick={this.openDialog}>\n\t\t\t\t\tPerf graph\n\t\t\t\t</button>\n\t\t\t\t{this.state.isDialogOpen && (\n\t\t\t\t\t<Dialog\n\t\t\t\t\t\ttitle={\"Performance graph for \" + this.props.name}\n\t\t\t\t\t\tmodal={true}\n\t\t\t\t\t\tonClose={this.handleClose}\n\t\t\t\t\t\theight={this.props.height}\n\t\t\t\t\t\twidth={this.props.width}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"graph-container\">\n\t\t\t\t\t\t\t<div className=\"symbols-list\">\n\t\t\t\t\t\t\t\t{this.props.data.map(key => (\n\t\t\t\t\t\t\t\t\t<div className=\"stock-select\" key={key.symbol}>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"checkBox\" onChange={e => this.setChecked(key.symbol, e.target.checked)} />\n\t\t\t\t\t\t\t\t\t\t\t{key.symbol}\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"chart-container\">\n\t\t\t\t\t\t\t\t<Line data={this.state.data} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"date-selectors\">\n\t\t\t\t\t\t<label>Start date: </label>\n\t\t\t\t\t\t<input type=\"date\" ref={this.startDate} />\n\t\t\t\t\t\t<label>End date: </label>\n\t\t\t\t\t\t<input type=\"date\" ref={this.endDate} />\n\t\t\t\t\t\t<button onClick={this.updateGraphData}>Update graph</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Dialog>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default GraphDialog;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"react-table/react-table.css\";\nimport { getStockData, getExchangeRate } from \"./appService\";\nimport { convert } from \"./utils\";\nimport StockTable from \"./stockTable\";\nimport StockDialog from \"./dialogs/stockDialog\";\nimport GraphDialog from \"./dialogs/graphDialog\";\n\nclass Portfolio extends Component {\n\tstate = {\n\t\tstocks: []\n\t};\n\n\tcurrencySelector = React.createRef();\n\n\taddStocks = (symbol, shares) => {\n\t\tgetStockData(symbol).then(response => {\n\t\t\tif (response[\"01. symbol\"]) {\n\t\t\t\tvar stockExists = false;\n\t\t\t\tthis.props.stocks.forEach(stock => {\n\t\t\t\t\tif (stock.data[\"01. symbol\"] === symbol.toUpperCase()) {\n\t\t\t\t\t\tstock.shares = parseInt(stock.shares) + parseInt(shares);\n\t\t\t\t\t\tstockExists = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (!stockExists) {\n\t\t\t\t\tthis.props.stocks.push({\n\t\t\t\t\t\tsymbol: symbol,\n\t\t\t\t\t\tshares: shares,\n\t\t\t\t\t\tdata: response,\n\t\t\t\t\t\tselected: false\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthis.setState({\n\t\t\t\t\tstocks: this.props.stocks\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\talert(\"No stock with symbol '\" + symbol + \"' found!\");\n\t\t\t}\n\t\t});\n\t};\n\n\tgetTotal() {\n\t\tvar sum = 0;\n\t\tthis.props.stocks.forEach(stock => {\n\t\t\tsum += parseInt(stock.shares) * stock.data[\"05. price\"];\n\t\t});\n\t\treturn sum.toFixed(2);\n\t}\n\tremoveStocks = () => {\n\t\tthis.props.stocks.forEach((stock, index) => {\n\t\t\tif (stock.selected) {\n\t\t\t\tthis.props.stocks.splice(index, 1);\n\t\t\t}\n\t\t});\n\t\tthis.setState({\n\t\t\tstocks: this.props.stocks\n\t\t});\n\t};\n\n\tconvert = () => {\n\t\tvar stocks = [...this.state.stocks];\n\t\tgetExchangeRate(this.currencySelector.current.value).then(rate => {\n\t\t\tvar converted = convert(stocks, rate);\n\t\t\tthis.setState({\n\t\t\t\tstocks: converted\n\t\t\t});\n\t\t});\n\t};\n\n\tonStockSelect = stock => {\n\t\tvar stocks = [...this.state.stocks];\n\t\tstock.selected = !stock.selected;\n\t\tthis.setState({\n\t\t\tstocks: stocks\n\t\t});\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.setState({\n\t\t\tstocks: this.props.stocks\n\t\t});\n\t}\n\n\tcomponentDidUpdate() {\n\t\tthis.props.onChange();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Portfolio\">\n\t\t\t\t<div className=\"portfolio-header\">\n\t\t\t\t\t<span className=\"portfolio-name\">{this.props.name} </span>\n\t\t\t\t\t<select ref={this.currencySelector} onChange={this.convert}>\n\t\t\t\t\t\t<option value=\"usd\">Show values in US dollar $</option>\n\t\t\t\t\t\t<option value=\"eur\">Show values in Euro €</option>\n\t\t\t\t\t</select>\n\t\t\t\t\t<button onClick={() => this.props.removePortfolio(this.props.index)}>\n\t\t\t\t\t\tDelete\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<StockTable data={this.props.stocks} onSelect={this.onStockSelect} />\n\t\t\t\t<h5>Total value of portfolio: {this.getTotal()}</h5>\n\t\t\t\t<div className=\"buttons\">\n\t\t\t\t\t<StockDialog\n\t\t\t\t\t\tname={this.props.name}\n\t\t\t\t\t\taction={this.addStocks}\n\t\t\t\t\t\tdisabled={this.state.stocks.length > 49}\n\t\t\t\t\t/>\n\t\t\t\t\t<GraphDialog\n\t\t\t\t\t\tname={this.props.name}\n\t\t\t\t\t\tdata={this.state.stocks}\n\t\t\t\t\t\theight={450}\n\t\t\t\t\t\twidth={800}\n\t\t\t\t\t/>\n\t\t\t\t\t<button onClick={this.removeStocks}>Remove selected</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Portfolio;\n","import React, { Component } from \"react\";\nimport Dialog from \"react-dialog\";\nimport \"react-dialog/css/index.css\";\nimport \"../App.css\";\n\nclass InputDialog extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tisDialogOpen: false\n\t\t};\n\t}\n\n\tnameInput = React.createRef();\n\n\topenDialog = () => this.setState({ isDialogOpen: true });\n\n\tcreatePortfolio = () => {\n\t\tthis.props.action(this.nameInput.current.value);\n\t\tthis.handleClose();\n\t};\n\n\thandleClose = () => {\n\t\tthis.setState({ isDialogOpen: false });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<button type=\"button\" onClick={this.openDialog}>\n\t\t\t\t\tCreate new portfolio\n\t\t\t\t</button>\n\t\t\t\t{this.state.isDialogOpen && (\n\t\t\t\t\t<Dialog\n\t\t\t\t\t\ttitle=\"Create new portfolio\"\n\t\t\t\t\t\tmodal={true}\n\t\t\t\t\t\tonClose={this.handleClose}\n\t\t\t\t\t\tbuttons={[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttext: \"Create portfolio\",\n\t\t\t\t\t\t\t\tonClick: () => this.createPortfolio()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]}\n\t\t\t\t\t>\n\t\t\t\t\t\t<label>Portfolio name: </label>\n\t\t\t\t\t\t<input ref={this.nameInput} type=\"text\" />\n\t\t\t\t\t</Dialog>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default InputDialog;\n","import React, { Component } from \"react\";\nimport Portfolio from \"./Portfolio\";\nimport \"./App.css\";\nimport PortfolioDialog from \"./dialogs/portfolioDialog\";\nimport { getStockData } from \"./appService\";\n\nclass App extends Component {\n\tstate = {\n\t\tdialogIsOpen: false,\n\t\tportfolios: {}\n\t};\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.addPortfolio = this.addPortfolio.bind(this);\n\t}\n\n\tcomponentDidUpdate = () => {\n\t\tlocalStorage.setItem(\"portfolios\", JSON.stringify(this.state.portfolios));\n\t};\n\n\tcomponentDidMount() {\n\t\tconst localStoragedata = JSON.parse(localStorage.getItem(\"portfolios\"));\n\t\tif (localStoragedata) {\n\t\t\tvar data = this.fetchData(localStoragedata);\n\t\t\tthis.setState({\n\t\t\t\tportfolios: data\n\t\t\t});\n\t\t}\n\t}\n\n\tfetchData = (localStoragedata) => {\n\t\tObject.keys(localStoragedata).forEach(portfolio => {\n\t\t\tlocalStoragedata[portfolio].stocks.forEach(stock => {\n\t\t\t\tgetStockData(stock.symbol).then(response => {\n\t\t\t\t\tstock.data = response;\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t\treturn localStoragedata;\n\t};\n\n\taddPortfolio = name => {\n\t\tif (Object.keys(this.state.portfolios).length < 10) {\n\t\t\tconst portfolios = { ...this.state.portfolios };\n\t\t\tportfolios[`${Date.now()}`] = { name: name, stocks: [] };\n\t\t\tthis.setState({\n\t\t\t\tportfolios: portfolios\n\t\t\t});\n\t\t} else {\n\t\t\talert(\"You can not have more than 10 portfolios!\");\n\t\t}\n\t};\n\n\tremovePortfolio = portfolioKey => {\n\t\tconst portfolios = { ...this.state.portfolios };\n\t\tdelete portfolios[portfolioKey];\n\t\tthis.setState({\n\t\t\tportfolios: portfolios\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<PortfolioDialog action={this.addPortfolio} />\n\t\t\t\t<div className=\"portfolio-grid\">\n\t\t\t\t\t{Object.keys(this.state.portfolios).map(key => (\n\t\t\t\t\t\t<Portfolio\n\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\tclassName=\"grid-item\"\n\t\t\t\t\t\t\tname={this.state.portfolios[key].name}\n\t\t\t\t\t\t\tstocks={this.state.portfolios[key].stocks}\n\t\t\t\t\t\t\tremovePortfolio={this.removePortfolio}\n\t\t\t\t\t\t\tindex={key}\n\t\t\t\t\t\t\tonChange={this.componentDidUpdate}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}